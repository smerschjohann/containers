name: Build, Merge, and Push

permissions:
  packages: write

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '17 4 * * */2'
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      tasks:
        description: 'JSON string representing the tasks to be run.'
        required: true
        default:  >
          [{"name": "fedbox", "dir": "./images/fedbox", "target": "fedbox"},
          {"name": "fedbox-codeserver", "dir": "./images/fedbox", "target": "fedbox-codeserver"}]

env:
  DEFAULT_TASKS: >
    [{"name": "fedbox", "dir": "./images/fedbox", "target": "fedbox"},
     {"name": "fedbox-codeserver", "dir": "./images/fedbox", "target": "fedbox-codeserver"}]
  REGISTRY_REPO: 'ghcr.io/${{ github.repository }}'
  TAG: 'latest'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            platform: "linux/amd64"
          - os: "ARM64"
            platform: "linux/arm64"
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v4
      - name: Build and push containers
        env:
          TASKS: ${{ github.event_name == 'push' && env.DEFAULT_TASKS || github.event.inputs.tasks }}
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
        run: |
          runcmd=/bin/bash
          if [[ $PLATFORM == 'linux/amd64' ]]; then
            mkdir -p ../images
            runcmd="podman run -e=TASKS -e=PLATFORM -e=ARCH -e=username -epassword -eregistry -i \
                          -u 0  --security-opt seccomp=unconfined --security-opt apparmor=unconfined \
                          --net=host --device /dev/fuse:rw \
                          -v ../images:/var/lib/containers:Z \
                          quay.io/buildah/stable:latest /bin/bash"
          fi

          $runcmd << EOF
            echo -n $password | buildah login -u $username --password-stdin $registry 
            tasks=$(echo "$TASKS" | jq -c '.[]')
            for task in $tasks; do
              name=$(echo $task | jq -r '.name')
              dir=$(echo $task | jq -r '.dir')
              target=$(echo $task | jq -r '.target')
              image_name="$REGISTRY_REPO/$name"
              
              buildah bud \
                --platform $PLATFORM \
                -f $dir/Dockerfile \
                --format docker \
                --tls-verify=true \
                -t $image_name:$ARCH-$TAG \
                --target $target \
                --layers \
                --cache-from $REGISTRY_REPO/cache \
                --cache-to $REGISTRY_REPO/cache \
                $dir
              
              buildah push $image_name:$ARCH-$TAG docker://$image_name:$ARCH-$TAG
            done
          EOF

  merge:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to ghcr.io
        env:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
        run: |
          echo -n $password | buildah login -u $username --password-stdin $registry 

      - name: Merge & push manifests
        env:
          TASKS: ${{ github.event_name == 'push' && env.DEFAULT_TASKS || github.event.inputs.tasks }}
        run: |
          tasks=$(echo "$TASKS" | jq -c '.[]')
          for task in $tasks; do
            name=$(echo $task | jq -r '.name')
            image_name="$REGISTRY_REPO/$name"
            final_manifest="$image_name:$TAG"
            
            buildah manifest rm $final_manifest > /dev/null 2> /dev/null || true
            buildah manifest create $final_manifest
            
            for arch in "amd64" "arm64"; do
              buildah pull --arch $arch $image_name:$arch-$TAG
              buildah manifest add $final_manifest docker://$image_name:$arch-$TAG
            done
            
            buildah manifest push --rm --all $final_manifest docker://$final_manifest
          done