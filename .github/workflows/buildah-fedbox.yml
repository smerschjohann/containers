name: Buildah multiarch

permissions:
  packages: write

on:
  push:
  schedule:
    - cron:  '52 4 * * */2'

env:
  REGISTRY: ghcr.io
  REGISTRY_REPO: ghcr.io/${{ github.repository }}
  TAG: latest

jobs:
  build:
    name: Use seperate runners for each architecture
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            platform: "linux/amd64"
          - os: "ARM64"
            platform: "linux/arm64"
    steps:
      - uses: actions/checkout@v2

# required when no dedicated ARM64 runner      
#      - name: Install qemu dependency
#        if: ${{ matrix.os == 'ubuntu-latest' }}
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y qemu-user-static

      - name: export architecture name (removing os prefix)
        run: |
          echo "ARCH=${PLATFORM#*/}" >>${GITHUB_ENV}
        env:
          PLATFORM: ${{ matrix.platform }}

      - name: Log in to ghcr.io
        env:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
        run: |
          echo -n $password | buildah login -u $username --password-stdin $registry 

      # build fedbox
      - name: build container fedbox
        env:
          IMAGE_NAME: ${{ env.REGISTRY_REPO }}/fedbox
          BUILDAH_WORKDIR: ./images/fedbox
          BUILDAH_TARGET: fedbox
        run: |
          buildah bud \
            --platform ${{ matrix.platform }} \
            -f $BUILDAH_WORKDIR/Dockerfile \
            --format docker \
            --tls-verify=true \
            -t $IMAGE_NAME:$TAG-$ARCH \
            --target $BUILDAH_TARGET \
            --layers \
            $BUILDAH_WORKDIR
      - name: push arch image to registry
        env:
          IMAGE_NAME: ${{ env.REGISTRY_REPO }}/fedbox
        run: |
          buildah push $IMAGE_NAME:$TAG-$ARCH docker://$IMAGE_NAME:$TAG-$ARCH
      
      ## fedbox-codeserver
      - name: build container fedbox
        env:
          IMAGE_NAME: ${{ env.REGISTRY_REPO }}/fedbox-codeserver
          BUILDAH_WORKDIR: ./images/fedbox
          BUILDAH_TARGET: fedbox-codeserver
        run: |
          buildah bud \
            --platform ${{ matrix.platform }} \
            -f $BUILDAH_WORKDIR/Dockerfile \
            --format docker \
            --tls-verify=true \
            -t $IMAGE_NAME:$TAG-$ARCH \
            --target $BUILDAH_TARGET \
            --layers \
            $BUILDAH_WORKDIR
      - name: push arch image to registry
        env:
          IMAGE_NAME: ${{ env.REGISTRY_REPO }}/fedbox-codeserver
        run: |
          buildah push $IMAGE_NAME:$TAG-$ARCH docker://$IMAGE_NAME:$TAG-$ARCH
  

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Log in to ghcr.io
        env:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
        run: |
          echo -n $password | buildah login -u $username --password-stdin $registry 

      - name: merge archs fedbox
        env:
          manifest: ${{ env.REGISTRY_REPO }}/fedbox:latest
        run:
          buildah manifest rm $manifest || true
          buildah manifest create $manifest
          for arch in "amd64" "arm64"; do
              buildah pull --arch $arch $manifest-$arch  
              buildah manifest add $manifest docker://$manifest-$arch
          done
          buildah push $manifest

      - name: merge archs fedbox-codeserver
        env:
          manifest: ${{ env.REGISTRY_REPO }}/fedbox-codeserver:latest
        run:
          buildah manifest rm $manifest || true
          buildah manifest create $manifest
          for arch in "amd64" "arm64"; do
              buildah pull --arch $arch $manifest-$arch  
              buildah manifest add $manifest docker://$manifest-$arch
          done
          buildah push $manifest